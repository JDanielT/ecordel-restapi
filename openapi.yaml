openapi: 3.0.0

info:
  description: "Rest API to perform operations on e-cordels"
  version: "1.0.0"
  title: "E-cordel API"
  contact:
    name: MÃ¡rio Sousa
    url: http://itsmemario.com.br
    email: super.mario.santos.sousa@gmail.com

servers:
  - url: https://ecordel-restapi.herokuapp.com/

paths:
  /cordels:
    get:
      summary: "Retrieve all cordels by pages"
      parameters:
        - name: page
          in: query
          schema:
            type : integer
          required: false
          description: Number of the page, starts at 0
        - name: size
          in: query
          schema:
            type: integer
          required: false
          description: Cordels per page.
        - name: title
          in: query
          schema:
            type: string
          required: false
          description: search corldels with titles that contains the parameter. It will work such as a like operation.
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReponsePage'
      tags:
        - Cordel
    post:
      summary: "Create a new cordel"
      requestBody:
        $ref: '#/components/requestBodies/cordel'
      responses:
        201:
          description: Create new cordel
        403:
          description: Forbidden
      security:
        - bearerAuth: []
      tags:
        - Cordel
  /cordels/{id}:
    get:
      summary: "Find and specific cordel"
      parameters:
        - name: "id"
          in: "path"
          schema:
            type: integer
          description: "Cordel identification number"
          required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cordel'
        404:
          description: "Not found"
      tags:
        - Cordel
    put:
      summary: "Update the cordel identified by id"
      parameters:
        - name: "id"
          in: "path"
          schema:
            type : integer
          description: "Cordel identification number"
          required: true
      requestBody:
        $ref: '#/components/requestBodies/cordel'
      responses:
        200:
          description: OK
        403:
          description: Forbidden
      security:
        - bearerAuth: []
      tags:
        - Cordel
    delete:
      summary: "Delete the cordel identified by id"
      parameters:
        - name: "id"
          in: "path"
          schema:
            type : integer
          description: "Cordel identification number"
          required: true
      responses:
        200:
          description: OK
        403:
          description: Forbidden
      security:
        - bearerAuth: []
      tags:
        - Cordel
  /auth:
    post:
      summary: Login and get token
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
      tags:
        - Authentication

components:
  requestBodies:
    cordel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cordel'

  schemas:
    ReponsePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CordelSummary'
        pageable:
          type: object
          $ref: '#/components/schemas/Page'
        totalPages:
          type: integer
        totalElements:
          type: integer
          description: total number of elements that can be fetched
        last:
          type: boolean
          description: indicates if it's the last page
        first:
          type: boolean
          description: indicates if it's the last page
        number:
          type: integer
          description: page number
        numberOfElements:
          type: integer
          description: number of elements on the current page
        size:
          type: integer
          description: size of the page
        empty:
          type: boolean
          description: indicates if the page is empty
    CordelSummary:
      type: object
      description: Cordel main data used for endpoints that return many objects. This item does not include the content.
      properties:
        id:
          type: integer
          description: cordel id
        author:
          type: object
          $ref: '#/components/schemas/Author'
        title:
          type: string
          description: cordel title
        description:
          type: string
          description: author's name
        xilogravura:
          type: string
          description: image url
        tags:
          type: array
          items:
            type: string
    Author:
      type: object
      properties:
        name:
          type: string
          description: author's name
        email:
          type: string
          description: author's email
        about:
          type: string
          description: small text about the author
    Cordel:
      type: object
      description: Cordel data with content.
      properties:
        id:
          type: integer
          description: cordel id
        author:
          type: string
          description: author's name
        title:
          type: string
          description: cordel title
        description:
          type: string
          description: author's name
        content:
          type: string
          description: cordel text
        xilogravura:
          type: string
          description: image url
        tags:
          type: array
          items:
            type: string
    Page:
      type: object
      properties:
        pageSize:
          type: integer
        pageNumber:
          type: integer
    Token:
      type: object
      properties:
        token:
          type: string
        authenticationMethod:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT